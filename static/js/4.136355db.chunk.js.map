{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","views/ContactsView/ContactsView.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView/ContactsView.js"],"names":["module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","response","status","toast","info","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","length","className","style","list","map","id","item","IconButton","aria-label","color","type","onClick","contactsOperations","ContactForm","useState","setName","setNumber","handleChange","e","target","value","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","TextField","label","variant","onChange","textField","placeholder","format","mask","pattern","input","Button","size","LoaderComponent","Filter","contactsActions","filterContact","ContactsView","useEffect","wrapper"],"mappings":"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","file":"static/js/4.136355db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"info\":\"ContactList_info__DNDkd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"textField\":\"ContactForm_textField__3CVaX\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__CCOvq\"};","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contacts-actions\";\nimport { toast } from \"react-toastify\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => {\n      dispatch(fetchContactsError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error(\"Oops! Server error! Please try later!\");\n      } else {\n        toast.error(\"Something went wrong! Please reload the page!\");\n      }\n    });\n};\n\nconst addContact = (name, number) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => {\n      dispatch(addContactError(error));\n\n      if (error.response.status === 400) {\n        toast.error(\"Contact creation error!\");\n      } else {\n        toast.error(\"Something went wrong! Please reload the page!\");\n      }\n    });\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => {\n      dispatch(deleteContactError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error(\"Oops! Server error! Please try later!\");\n      } else {\n        toast.error(\"Something went wrong! Please reload the page!\");\n      }\n    });\n};\n\nexport { fetchContacts, addContact, deleteContact };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = (state) => state.contacts.items;\nconst getLoading = (state) => state.contacts.isLoading;\nconst getError = (state) => state.contacts.error;\nconst getFilter = (state) => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport { getContacts, getLoading, getError, getFilter, getVisibleContacts };\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport style from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ul className={style.list}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <li className={style.item} key={id}>\n              <p className={style.info}>\n                <b>{name}</b>\n                <em>{number}</em>\n              </p>\n              <IconButton\n                aria-label=\"delete\"\n                color=\"secondary\"\n                type=\"button\"\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </li>\n          ))}\n        </ul>\n      )}\n\n      {!contacts.length && <p>Your phonebook is empty. Please add contact.</p>}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\nimport { toast } from \"react-toastify\";\nimport NumberFormat from \"react-number-format\";\nimport Button from \"@material-ui/core/Button\";\nimport LoaderComponent from \"../LoaderComponent/LoaderComponent\";\nimport style from \"./ContactForm.module.css\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = (name) => {\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const checkRepeatNumber = (number) => {\n    return contacts.find((contact) => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === \"\" || number.trim() === \"\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      return toast(`🤔 ${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      return toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      return toast.info(\"😱 Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"text\"\n        name=\"text\"\n        value={name}\n        onChange={handleChange}\n        className={style.textField}\n      />\n\n      <NumberFormat\n        placeholder=\"Enter phone number\"\n        format=\"(###) ###-##-##\"\n        mask=\"_\"\n        pattern=\"^[0-9\\s\\(\\)\\-]{15}\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        className={style.input}\n      />\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Add contact\n        </Button>\n      )}\n\n      {isLoading && <LoaderComponent />}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { contactsActions, contactsSelectors } from \"../../redux/contacts\";\nimport style from \"./Filter.module.css\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <label className={style.label}>\n          <input\n            className={style.input}\n            type=\"text\"\n            value={filter}\n            placeholder=\"Enter a name to search...\"\n            onChange={(e) =>\n              dispatch(contactsActions.filterContact(e.target.value))\n            }\n          />\n        </label>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport ContactList from \"../../components/ContactList/ContactList\";\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\nimport { contactsOperations } from \"../../redux/contacts\";\nimport style from \"./ContactsView.module.css\";\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <div className={style.wrapper}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n"],"sourceRoot":""}
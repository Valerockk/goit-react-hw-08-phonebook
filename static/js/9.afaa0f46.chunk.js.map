{"version":3,"sources":["views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["module","exports","RegisterView","dispatch","useDispatch","isLoading","useSelector","authSelectors","getLoading","useState","name","setName","email","setEmail","password","setPassword","handleChange","e","target","value","onSubmit","preventDefault","trim","toast","error","length","info","authOperations","register","className","style","form","autoComplete","label","variant","color","type","onChange","textField","size"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,kC,+KCQjD,SAASC,IACtB,IAAMC,EAAWC,cACXC,EAAYC,YAAYC,IAAcC,YAFP,EAGbC,mBAAS,IAHI,mBAG9BC,EAH8B,KAGxBC,EAHwB,OAIXF,mBAAS,IAJE,mBAI9BG,EAJ8B,KAIvBC,EAJuB,OAKLJ,mBAAS,IALJ,mBAK9BK,EAL8B,KAKpBC,EALoB,KAO/BC,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBR,EADkB,EAClBA,KAAMS,EADY,EACZA,MAEd,OAAQT,GACN,IAAK,OACH,OAAOC,EAAQQ,GACjB,IAAK,QACH,OAAON,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAiBN,OACE,uBAAMC,SAda,SAACH,GAEpB,OADAA,EAAEI,iBACkB,KAAhBX,EAAKY,QAAkC,KAAjBV,EAAMU,QAAqC,KAApBR,EAASQ,OACjDC,IAAMC,MAAM,2CACVV,EAASW,OAAS,EACpBF,IAAMG,KAAK,kDAEpBvB,EAASwB,IAAeC,SAAS,CAAElB,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,SACTE,EAAY,MAIkBc,UAAWC,IAAMC,KAAMC,aAAa,MAAlE,UACE,cAAC,IAAD,CACEC,MAAM,OACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,OACL1B,KAAK,OACLS,MAAOT,EACP2B,SAAUrB,EACVa,UAAWC,IAAMQ,YAGnB,cAAC,IAAD,CACEL,MAAM,QACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,QACL1B,KAAK,QACLS,MAAOP,EACPyB,SAAUrB,EACVa,UAAWC,IAAMQ,YAGnB,cAAC,IAAD,CACEL,MAAM,WACNC,QAAQ,WACRC,MAAM,YACNC,KAAK,WACL1B,KAAK,WACLS,MAAOL,EACPuB,SAAUrB,EACVa,UAAWC,IAAMQ,aAGjBjC,GACA,cAAC,IAAD,CACE6B,QAAQ,YACRC,MAAM,YACNI,KAAK,QACLH,KAAK,SAJP,qBAUD/B,GAAa,cAAC,IAAD","file":"static/js/9.afaa0f46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterView_form__jLkqR\",\"textField\":\"RegisterView_textField__KY2Kj\"};","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authOperations, authSelectors } from \"../../redux/auth\";\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport LoaderComponent from \"../../components/LoaderComponent/LoaderComponent\";\nimport style from \"./RegisterView.module.css\";\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(authSelectors.getLoading);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\" || email.trim() === \"\" || password.trim() === \"\") {\n      return toast.error(\"ðŸ’© Please fill in all fields!\");\n    } else if (password.length < 7) {\n      return toast.info(\"Passwords must be at least 7 characters long!\");\n    }\n    dispatch(authOperations.register({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form} autoComplete=\"off\">\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        className={style.textField}\n      />\n\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        className={style.textField}\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        className={style.textField}\n      />\n\n      {!isLoading && (\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          type=\"submit\"\n        >\n          Sign up\n        </Button>\n      )}\n\n      {isLoading && <LoaderComponent />}\n    </form>\n  );\n}\n"],"sourceRoot":""}